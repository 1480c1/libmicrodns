/*****************************************************************************
 * This file is part of libmicrodns.
 *
 * Copyright Â© 2014-2015 VideoLabs SAS
 *
 * Author: Jonathan Calmels <jbjcalmels@gmail.com>
 *
 *****************************************************************************
 * liBDSM is released under LGPLv2.1 (or later) and is also available
 * under a commercial license.
 *****************************************************************************
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 *****************************************************************************/

#ifndef MICRODNS_MDNS_H
#define MICRODNS_MDNS_H

#include <stdbool.h>

#include "rr.h"

# ifdef __cplusplus
extern "C" {
# endif

struct mdns_ctx;

#define MICRODNS_VERSION_NAME  "@VERSION@"
#define MICRODNS_VERSION_INT   (@MICRODNS_MAJOR@<<16 | @MICRODNS_MINOR@<<8 | @MICRODNS_MICRO@)
#define MICRODNS_MAJOR         @MICRODNS_MAJOR@
#define MICRODNS_MINOR         @MICRODNS_MINOR@
#define MICRODNS_MICRO         @MICRODNS_MICRO@

#define MDNS_PORT        5353
#define MDNS_ADDR_IPV4   "224.0.0.251"
#define MDNS_ADDR_IPV6   "FF02::FB"

typedef void (*mdns_callback)(void*, int, const struct rr_entry *);
/**
 * \return true if the listener should be stopped
 */
typedef bool (*mdns_stop_func)(void*);

extern int mdns_init(struct mdns_ctx **ctx, const char *addr, unsigned short port);
extern int mdns_cleanup(struct mdns_ctx *ctx);
extern int mdns_send(const struct mdns_ctx *ctx, enum rr_type, const char *);
extern void mdns_free(struct rr_entry *);
extern int mdns_recv(const struct mdns_ctx *ctx, struct rr_entry **);
extern void mdns_print(const struct rr_entry *);
extern int mdns_strerror(int, char *, size_t);
extern int mdns_listen(const struct mdns_ctx *ctx, const char *name, unsigned int interval,
    mdns_stop_func stop, mdns_callback callback, void* p_callback_cookie);

# ifdef __cplusplus
}
# endif

#endif /* MICRODNS_MDNS_H */
